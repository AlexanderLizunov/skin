function inArray(e,t){for(var n=t.length,o=0;o<n;o++)if(t[o]==e)return!0;return!1}function onFacebookReady(e){var t=setInterval(function(){"undefined"!=typeof FB&&(clearInterval(t),e())},400)}function decOfNum(e,t){return decCache[e]||(decCache[e]=e%100>4&&e%100<20?2:decCases[Math.min(e%10,5)]),t[decCache[e]]}function getTimeRemaining(e){var t=Date.parse(e)-Date.parse(new Date),n=Math.floor(t/1e3%60),o=Math.floor(t/1e3/60%60),i=Math.floor(t/36e5%24),s=Math.floor(t/864e5);return t>=0?{total:t,days:s,hours:i,minutes:o,seconds:n}:($("body").addClass("contest-end"),{total:0,days:0,hours:0,minutes:0,seconds:0})}function initializeClock(e,t,n){function o(){var e=getTimeRemaining(n);l.innerHTML=e.days,c.innerHTML=("0"+e.hours).slice(-2),d.innerHTML=("0"+e.minutes).slice(-2),h.innerHTML=("0"+e.seconds).slice(-2);var o=document.getElementById("days-text"+t),i=document.getElementById("hours-text"+t),s=document.getElementById("minutes-text"+t),a=document.getElementById("seconds-text"+t);o.innerHTML=decOfNum(e.days,["день","дня","дней"]),i.innerHTML=decOfNum(e.hours,["час","часа","часов"]),s.innerHTML=decOfNum(e.minutes,["минута","минуты","минут"]),a.innerHTML=decOfNum(e.seconds,["секунда","секунды","секунд"]),e.total<=0&&clearInterval(u)}var i=(document.getElementById(e),"days"+t),s="hours"+t,a="minutes"+t,r="seconds"+t,l=document.getElementsByClassName(i)[0],c=document.getElementsByClassName(s)[0],d=document.getElementsByClassName(a)[0],h=document.getElementsByClassName(r)[0];o();var u=setInterval(o,1e3)}var BS={vkLikePoints:1,vkSharePoints:3,vkSubscribePoints:1,fbLikePoints:1,fbSharePoints:3,instaLikePoints:1,okSharePoints:3,okSubscribePoints:1,locale:"ru",apiUrl:"http://boundstart.ru/points-api/v1.0.0",Tracker:{points:0,reason:"",action:"add",id:0,eventsRus:{VKShare:"Поделился ВК",VKLike:"Лайкнул ВК",VKUnlike:"Дизлайкнул ВК",VKSubscribe:"Подписался ВК",VKUnsubscribe:"Отписался ВК",FBLike:"Подписался в Фейсбук",FBUnlike:"Отписался в Фейсбук",FBShare:"Поделился в Фейсбук",InstaLike:"Подписался в инстаграм",OkShare:"Поделился в ОК",OkSubscribe:"Подписался в ОК"},eventsEng:{VKShare:"Like in VK",VKLike:"Dislike in VK",VKUnlike:"Share in VK",VKSubscribe:"Subscribe VK",VKUnsubscribe:"Unsubscribe VK",FBLike:"Like on Facebook",FBUnlike:"Dislike on Facebook",FBShare:"Share on Facebook",InstaLike:"Subscribe on Instagram",OkShare:"Share in OK",OkSubscribe:"Subscribe on OK"},event:"",track:function(){BS.Tracker.defineEvent(),BS.Tracker.defineReason(),BS.Tracker.definePoints(),BS.Tracker.defineAction(),console.log("reason "+BS.Tracker.reason),console.log("action "+BS.Tracker.action),console.log("points "+BS.Tracker.points),console.log("id    "+BS.Tracker.id),BS.Tracker.send(BS.Tracker.id)},defineEvent:function(){"ru"===BS.locale?$events=BS.Tracker.eventsRus:$events=BS.Tracker.eventsEng,BS.Tracker.event=$events[BS.Tracker.reason]},defineReason:function(){if(""===BS.Tracker.reason)throw console.log("Reason is not defined!"),new Error("Something went badly wrong!")},defineAction:function(){inArray(BS.Tracker.reason,["VKUnlike","VKUnsubscribe","FBUnlike"])?this.action="subtract":this.action="add"},definePoints:function(){switch(BS.Tracker.reason){case"VKLike":case"VKUnlike":BS.Tracker.points=BS.vkLikePoints;break;case"VKShare":BS.Tracker.points=BS.vkSharePoints;break;case"VKSubscribe":case"VKUnsubscribe":BS.Tracker.points=BS.vkSubscribePoints;break;case"FBLike":case"FBUnlike":BS.Tracker.points=BS.fbLikePoints;break;case"FBShare":BS.Tracker.points=BS.fbSharePoints;break;case"InstaLike":BS.Tracker.points=BS.instaLikePoints;break;case"OkShare":BS.Tracker.points=BS.okSharePoints;break;case"OkSubscribe":BS.Tracker.points=BS.okSubscribePoints}},getUserId:function(e){$.ajax({type:"POST",url:BS.apiUrl+"/get-user-id.php",data:{action:"getId",email:e},success:function(e){console.log(e),BS.Tracker.id=e}})},send:function(e){$.ajax({type:"GET",dataType:"jsonp",processData:!1,crossDomain:!0,jsonpCallback:"done",jsonp:!1,url:BS.apiUrl+"?id="+e+"&points="+BS.Tracker.points+"&action="+BS.Tracker.action+"&event="+BS.Tracker.event,success:function(e){console.log(e)}})}}};+function(e){"use strict";function t(t,o){return this.each(function(){var i=e(this),s=i.data("bs.modal"),a=e.extend({},n.DEFAULTS,i.data(),"object"==typeof t&&t);s||i.data("bs.modal",s=new n(this,a)),"string"==typeof t?s[t](o):a.show&&s.show(o)})}var n=function(t,n){this.options=n,this.$body=e(document.body),this.$element=e(t),this.$backdrop=this.isShown=null,this.scrollbarWidth=0,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,e.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};n.VERSION="3.3.2",n.TRANSITION_DURATION=300,n.BACKDROP_TRANSITION_DURATION=150,n.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},n.prototype.toggle=function(e){return this.isShown?this.hide():this.show(e)},n.prototype.show=function(t){var o=this,i=e.Event("show.bs.modal",{relatedTarget:t});this.$element.trigger(i),this.isShown||i.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',e.proxy(this.hide,this)),this.backdrop(function(){var i=e.support.transition&&o.$element.hasClass("fade");o.$element.parent().length||o.$element.appendTo(o.$body),o.$element.show().scrollTop(0),o.options.backdrop&&o.adjustBackdrop(),o.adjustDialog(),i&&o.$element[0].offsetWidth,o.$element.addClass("in").attr("aria-hidden",!1),o.enforceFocus();var s=e.Event("shown.bs.modal",{relatedTarget:t});i?o.$element.find(".modal-dialog").one("bsTransitionEnd",function(){o.$element.trigger("focus").trigger(s)}).emulateTransitionEnd(n.TRANSITION_DURATION):o.$element.trigger("focus").trigger(s)}))},n.prototype.hide=function(t){t&&t.preventDefault(),t=e.Event("hide.bs.modal"),this.$element.trigger(t),this.isShown&&!t.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),e(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal"),e.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",e.proxy(this.hideModal,this)).emulateTransitionEnd(n.TRANSITION_DURATION):this.hideModal())},n.prototype.enforceFocus=function(){e(document).off("focusin.bs.modal").on("focusin.bs.modal",e.proxy(function(e){this.$element[0]===e.target||this.$element.has(e.target).length||this.$element.trigger("focus")},this))},n.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",e.proxy(function(e){27==e.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},n.prototype.resize=function(){this.isShown?e(window).on("resize.bs.modal",e.proxy(this.handleUpdate,this)):e(window).off("resize.bs.modal")},n.prototype.hideModal=function(){var e=this;this.$element.hide(),this.backdrop(function(){e.$body.removeClass("modal-open"),e.resetAdjustments(),e.resetScrollbar(),e.$element.trigger("hidden.bs.modal")})},n.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},n.prototype.backdrop=function(t){var o=this,i=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var s=e.support.transition&&i;if(this.$backdrop=e('<div class="modal-backdrop '+i+'" />').prependTo(this.$element).on("click.dismiss.bs.modal",e.proxy(function(e){e.target===e.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),s&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!t)return;s?this.$backdrop.one("bsTransitionEnd",t).emulateTransitionEnd(n.BACKDROP_TRANSITION_DURATION):t()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var a=function(){o.removeBackdrop(),t&&t()};e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(n.BACKDROP_TRANSITION_DURATION):a()}else t&&t()},n.prototype.handleUpdate=function(){this.options.backdrop&&this.adjustBackdrop(),this.adjustDialog()},n.prototype.adjustBackdrop=function(){this.$backdrop.css("height",0).css("height",this.$element[0].scrollHeight)},n.prototype.adjustDialog=function(){var e=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&e?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!e?this.scrollbarWidth:""})},n.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},n.prototype.checkScrollbar=function(){this.bodyIsOverflowing=document.body.scrollHeight>document.documentElement.clientHeight,this.scrollbarWidth=this.measureScrollbar()},n.prototype.setScrollbar=function(){var e=parseInt(this.$body.css("padding-right")||0,10);this.bodyIsOverflowing&&this.$body.css("padding-right",e+this.scrollbarWidth)},n.prototype.resetScrollbar=function(){this.$body.css("padding-right","")},n.prototype.measureScrollbar=function(){var e=document.createElement("div");e.className="modal-scrollbar-measure",this.$body.append(e);var t=e.offsetWidth-e.clientWidth;return this.$body[0].removeChild(e),t};var o=e.fn.modal;e.fn.modal=t,e.fn.modal.Constructor=n,e.fn.modal.noConflict=function(){return e.fn.modal=o,this},e(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(n){var o=e(this),i=o.attr("href"),s=e(o.attr("data-target")||i&&i.replace(/.*(?=#[^\s]+$)/,"")),a=s.data("bs.modal")?"toggle":e.extend({remote:!/#/.test(i)&&i},s.data(),o.data());o.is("a")&&n.preventDefault(),s.one("show.bs.modal",function(e){e.isDefaultPrevented()||s.one("hidden.bs.modal",function(){o.is(":visible")&&o.trigger("focus")})}),t.call(s,a,this)})}(jQuery),window.fbAsyncInit=function(){FB.init({appId:"143481576358898",xfbml:!0,version:"v2.8"})},function(e,t,n){var o,i=e.getElementsByTagName(t)[0];e.getElementById(n)||(o=e.createElement(t),o.id=n,o.src="//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.8&appId=143481576358898",i.parentNode.insertBefore(o,i))}(document,"script","facebook-jssdk"),onFacebookReady(function(){console.log("fb!"),FB.Event.subscribe("edge.create",function(){console.log("like on facebook")}),FB.Event.subscribe("edge.remove",function(){console.log("unlike on facebook")}),$(".fb-share").on("click",function(){FB.ui({method:"share",href:"https://zagar-msk.ru?utm_source=FB&utm_medium=repost&utm_campaign=contest"},function(e){e&&e.error_message})})}),window.initMap=function(){var e=new google.maps.LatLng(55.703167,37.506159),t=new google.maps.LatLng(55.703167,37.506159),n=[{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#444444"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f2f2f2"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"on"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"all",stylers:[{color:"#adadad"},{visibility:"on"}]}],o=new google.maps.StyledMapType(n,{name:"Styled Map"}),i={center:t,scrollwheel:!1,zoom:16,mapTypeControlOptions:{mapTypeIds:[google.maps.MapTypeId.ROADMAP,"map_style"]},zoomControl:!0,zoomControlOptions:{position:google.maps.ControlPosition.RIGHT_TOP},streetViewControl:!1},s=new google.maps.Map(document.getElementById("map"),i),a=new google.maps.Marker({icon:"img/images/pointer.png",position:e,map:s,title:"We are here!"});s.mapTypes.set("map_style",o),s.setMapTypeId("map_style");var r=new google.maps.InfoWindow({content:' <div class="location-block"><div class="location-item"><p> Студия загара «Кожа»</p></div><div class="location-item"><p><span>E-MAIL:</span> solyary.skin@yandex.ru</p></div><div class="location-item"><p><span>АДРЕС:</span>пр. Мичуринский 16. Вход с ул. Столетова</p></div><div class="location-item"><p><span>ТЕЛ:</span>+7 499 346 85 35</p></div><div class="location-item"><p><span>ВРЕМЯ РАБОТЫ:</span> 10:00-22:00</p></div>'});r.open(s,a),a.addListener("click",function(){r.open(s,a)}),google.maps.event.addListener(s,"click",function(e){r.close()})},$(document).ready(function(){initMap()}),$(window).resize(function(){initMap()}),$(".nav-item").on("click",function(){console.log($(this).index()),anchorName="#anchor-"+$(this).index(),$("body, html").animate({scrollTop:$(anchorName).offset().top},900)}),$(document).ready(function(){-1!=navigator.userAgent.indexOf("Mac OS X")&&$("body").addClass("platform-ios")}),$(".call-button").on("click",function(){$("#modal-call").modal("show")}),$(".promo-button, .hue-item-button,.price-button, .hue-subscribe-button").on("click",function(){$(".modal-title").css("display","none");var e=this.getAttribute("data-text");getTitle=document.getElementById(e),getTitle.style.display="block",formEl=document.getElementById("mauticform_input_kozhasubscribe_direction"),formEl.value=e,console.log(formEl.value),$("#modal-subscribe").modal("show")});var isActive=!1;$(".header__menubtn").on("click",function(){isActive?($(".hamburger").removeClass("burger-active"),$(".nav-list").removeClass("nav-list__active")):($(".hamburger").addClass("burger-active"),$(".nav-list").addClass("nav-list__active")),isActive=!isActive}),$(".vk-share-1").on("click",function(){console.log("vk-1"),ga("send",{hitType:"event",eventCategory:"Share",eventAction:"share-vk1",eventLabel:"Landing",eventValue:3})}),$(".vk-share-2").on("click",function(){ga("send",{hitType:"event",eventCategory:"Share",eventAction:"share-vk2",eventLabel:"Landing",eventValue:3}),console.log("vk-2")}),$(".fb-share-1").on("click",function(){console.log("fb-1"),ga("send",{hitType:"event",eventCategory:"Share",eventAction:"share-fb1",eventLabel:"Landing",eventValue:3})}),$(".fb-share-2").on("click",function(){console.log("fb-2"),ga("send",{hitType:"event",eventCategory:"Share",eventAction:"share-fb2",eventLabel:"Landing",eventValue:3})}),$(".button-push").on("click",function(){var e=""+this.getAttribute("data-type"),t=""+this.getAttribute("data-button");window.eventButton=t,ga("send",{hitType:"event",eventCategory:e,eventAction:"push-button",eventLabel:t,eventValue:1}),console.log(e,t)}),$(".arrow-up-cover").on("click",function(){$("body, html").animate({scrollTop:0},900)}),window.onload=function(){MaskedInput({elm:document.getElementById("phone"),format:"+375 (__) ___-__-__",separator:"+375 ()-"})};var decCache=[],decCases=[2,0,1,1,1,2],deadline=new Date(2018,1,27,18,0,0);console.log(deadline),initializeClock("js-timer","",deadline),initializeClock("js-timer2","1",deadline),initializeClock("js-timer3","2",deadline);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
